{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport react, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { db } from \"../../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstName = _useState2[0],\n    setFirstName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastName = _useState4[0],\n    setLastName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log('Register button pressed');\n        console.log('First Name:', firstName);\n        console.log('Last Name:', lastName);\n        console.log('Email:', email);\n        console.log('Password:', password);\n        var userRef = db.collection('users').doc();\n        yield userRef.set({\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          password: password\n        });\n        console.log('User registered successfully!');\n        navigation.goBack();\n      } catch (error) {\n        console.error('Error registering user:', error);\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Register\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"First Name\",\n      value: firstName,\n      onChangeText: function onChangeText(text) {\n        return setFirstName(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChangeText: function onChangeText(text) {\n        return setLastName(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email Address\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Register\"\n      })\n    })]\n  });\n};\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    height: 50,\n    backgroundColor: 'white',\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  button: {\n    backgroundColor: 'black',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["react","useState","View","Text","StyleSheet","TouchableOpacity","TextInput","db","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","handleRegister","_ref2","_asyncToGenerator","console","log","userRef","collection","doc","set","goBack","error","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","text","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","paddingHorizontal","fontSize","fontWeight","marginBottom","height","backgroundColor","alignItems","borderRadius","color"],"sources":["G:/Work/Shenal/App/src/Views/Register.js"],"sourcesContent":["import react, {useState} from 'react';\r\nimport {View, Text, StyleSheet, TouchableOpacity, TextInput} from 'react-native';\r\nimport {db} from \"../../config\";\r\n\r\nconst RegisterScreen = ({navigation}) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleRegister = async () => {\r\n        try {\r\n            console.log('Register button pressed');\r\n            console.log('First Name:', firstName);\r\n            console.log('Last Name:', lastName);\r\n            console.log('Email:', email);\r\n            console.log('Password:', password);\r\n\r\n            const userRef = db.collection('users').doc();\r\n            await userRef.set({\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                password\r\n            });\r\n\r\n            console.log('User registered successfully!');\r\n            navigation.goBack();\r\n        } catch (error) {\r\n            console.error('Error registering user:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Register</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"First Name\"\r\n                value={firstName}\r\n                onChangeText={text => setFirstName(text)}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Last Name\"\r\n                value={lastName}\r\n                onChangeText={text => setLastName(text)}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email Address\"\r\n                value={email}\r\n                onChangeText={text => setEmail(text)}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                secureTextEntry\r\n                value={password}\r\n                onChangeText={text => setPassword(text)}\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n                <Text style={styles.buttonText}>Register</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 20,\r\n    },title:{\r\n        fontSize: 50,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    input: {\r\n        height: 50,\r\n        backgroundColor: 'white',\r\n        marginBottom: 10,\r\n        paddingHorizontal: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: 'black',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n        borderRadius: 8,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}