{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport react, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { db } from \"../../config\";\nimport { AuthContext } from \"../../Context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    setUser = _useContext.setUser;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log('Login button pressed');\n        console.log('Email:', email);\n        console.log('Password:', password);\n        var usersRef = db.collection('users');\n        var querySnapshot = yield usersRef.where('email', '==', email).where('password', '==', password).get();\n        if (querySnapshot.empty) {\n          console.log('Invalid credentials');\n          return;\n        }\n        console.log('User logged in successfully!');\n        setUser(querySnapshot.docs[0].data());\n      } catch (error) {\n        console.error('Error logging in:', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email Address\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    height: 50,\n    backgroundColor: 'white',\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  button: {\n    backgroundColor: 'black',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["react","useContext","useState","View","Text","StyleSheet","TouchableOpacity","TextInput","db","AuthContext","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useContext","user","setUser","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","_ref2","_asyncToGenerator","console","log","usersRef","collection","querySnapshot","where","get","empty","docs","data","error","apply","arguments","style","styles","container","children","title","input","placeholder","onChangeText","text","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","paddingHorizontal","fontSize","fontWeight","marginBottom","height","backgroundColor","alignItems","borderRadius","color"],"sources":["G:/Work/Shenal/App/src/Views/Login.js"],"sourcesContent":["import react, {useContext, useState} from 'react';\r\nimport {View, Text, StyleSheet, TouchableOpacity, TextInput} from 'react-native';\r\nimport {db} from \"../../config\";\r\nimport {AuthContext} from \"../../Context/AuthContext\";\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n\r\n    const { user, setUser } = useContext(AuthContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            console.log('Login button pressed');\r\n            console.log('Email:', email);\r\n            console.log('Password:', password);\r\n\r\n            const usersRef = db.collection('users');\r\n            const querySnapshot = await usersRef\r\n                .where('email', '==', email)\r\n                .where('password', '==', password)\r\n                .get();\r\n\r\n            if (querySnapshot.empty) {\r\n                console.log('Invalid credentials');\r\n                return;\r\n            }\r\n\r\n            console.log('User logged in successfully!');\r\n            setUser(querySnapshot.docs[0].data());\r\n        } catch (error) {\r\n            console.error('Error logging in:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Login</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email Address\"\r\n                onChangeText={text => setEmail(text)}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                secureTextEntry\r\n                onChangeText={text => setPassword(text)}\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n                <Text style={styles.buttonText}>Login</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 20,\r\n    },title:{\r\n        fontSize: 50,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    input: {\r\n        height: 50,\r\n        backgroundColor: 'white',\r\n        marginBottom: 10,\r\n        paddingHorizontal: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: 'black',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n        borderRadius: 8,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}