{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar image = require(\"../../assets/bg.png\");\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var register = function register() {\n    navigation.navigate('register');\n  };\n  var login = function login() {\n    navigation.navigate('login');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: image,\n      style: styles.backgroundImage,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Tree Leaf Identification System\"\n      }), _jsx(View, {\n        style: styles.contentContainer,\n        children: _jsxs(View, {\n          style: styles.btnContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: \"transparent\"\n            }],\n            onPress: login,\n            children: _jsx(Text, {\n              style: [styles.buttonText, {\n                color: 'black'\n              }],\n              children: \"Login\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: \"black\"\n            }],\n            onPress: register,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Register\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n};\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 250,\n    textAlign: 'center',\n    width: '100%',\n    color: 'white'\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: 'rgb(255,255,255)',\n    height: 100,\n    paddingVertical: 20,\n    paddingHorizontal: 5\n  },\n  button: {\n    flex: 1,\n    height: 50,\n    marginHorizontal: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n    borderRadius: 8,\n    borderWidth: 2,\n    borderColor: 'black'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","View","ImageBackground","StyleSheet","TouchableOpacity","Text","jsx","_jsx","jsxs","_jsxs","image","require","HomeScreen","_ref","navigation","register","navigate","login","style","styles","container","children","source","backgroundImage","title","contentContainer","btnContainer","button","backgroundColor","onPress","buttonText","color","create","flex","resizeMode","justifyContent","fontSize","fontWeight","position","top","textAlign","width","flexDirection","height","paddingVertical","paddingHorizontal","marginHorizontal","alignItems","marginBottom","borderRadius","borderWidth","borderColor"],"sources":["G:/Work/Shenal/App/src/Views/Home.js"],"sourcesContent":["import React from 'react';\r\nimport {View, ImageBackground, StyleSheet, TouchableOpacity, Text} from 'react-native';\r\n\r\nconst image = require('../../assets/bg.png');\r\n\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n\r\n    const register = () => {\r\n        navigation.navigate('register')\r\n    }\r\n    const login = () => {\r\n        navigation.navigate('login')\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground\r\n                source={image}\r\n                style={styles.backgroundImage}\r\n            >\r\n                <Text style={styles.title}>Tree Leaf Identification System</Text>\r\n                <View style={styles.contentContainer}>\r\n                    <View style={styles.btnContainer}>\r\n                        <TouchableOpacity style={[styles.button, {backgroundColor: \"transparent\"}]} onPress={login}>\r\n                            <Text style={[styles.buttonText, {color: 'black'}]}>Login</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={[styles.button, {backgroundColor: \"black\"}]} onPress={register}>\r\n                            <Text style={styles.buttonText}>Register</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n    },\r\n    contentContainer: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        // flexDirection: 'row',\r\n    }, title: {\r\n        fontSize: 50,\r\n        fontWeight: 'bold',\r\n        position: 'absolute',\r\n        top: 250,\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        color: 'white',\r\n    },\r\n    btnContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: 'rgb(255,255,255)',\r\n        height: 100,\r\n        paddingVertical: 20,\r\n        paddingHorizontal: 5,\r\n    },\r\n    button: {\r\n        flex: 1,\r\n        height: 50,\r\n        marginHorizontal: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n        borderRadius: 8,\r\n        borderWidth: 2,\r\n        borderColor: 'black',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,KAAK,GAAGC,OAAO,uBAAuB;AAG5C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAE3B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACnBD,UAAU,CAACE,QAAQ,CAAC,UAAU,CAAC;EACnC,CAAC;EACD,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;IAChBH,UAAU,CAACE,QAAQ,CAAC,OAAO,CAAC;EAChC,CAAC;EAED,OACIT,IAAA,CAACN,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC1BZ,KAAA,CAACP,eAAe;MACZoB,MAAM,EAAEZ,KAAM;MACdQ,KAAK,EAAEC,MAAM,CAACI,eAAgB;MAAAF,QAAA,GAE9Bd,IAAA,CAACF,IAAI;QAACa,KAAK,EAAEC,MAAM,CAACK,KAAM;QAAAH,QAAA,EAAC;MAA+B,EAAO,EACjEd,IAAA,CAACN,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACM,gBAAiB;QAAAJ,QAAA,EACjCZ,KAAA,CAACR,IAAI;UAACiB,KAAK,EAAEC,MAAM,CAACO,YAAa;UAAAL,QAAA,GAC7Bd,IAAA,CAACH,gBAAgB;YAACc,KAAK,EAAE,CAACC,MAAM,CAACQ,MAAM,EAAE;cAACC,eAAe,EAAE;YAAa,CAAC,CAAE;YAACC,OAAO,EAAEZ,KAAM;YAAAI,QAAA,EACvFd,IAAA,CAACF,IAAI;cAACa,KAAK,EAAE,CAACC,MAAM,CAACW,UAAU,EAAE;gBAACC,KAAK,EAAE;cAAO,CAAC,CAAE;cAAAV,QAAA,EAAC;YAAK;UAAO,EACjD,EACnBd,IAAA,CAACH,gBAAgB;YAACc,KAAK,EAAE,CAACC,MAAM,CAACQ,MAAM,EAAE;cAACC,eAAe,EAAE;YAAO,CAAC,CAAE;YAACC,OAAO,EAAEd,QAAS;YAAAM,QAAA,EACpFd,IAAA,CAACF,IAAI;cAACa,KAAK,EAAEC,MAAM,CAACW,UAAW;cAAAT,QAAA,EAAC;YAAQ;UAAO,EAChC;QAAA;MAChB,EACJ;IAAA;EACO,EACf;AAEf,CAAC;AAED,eAAeT,UAAU;AAEzB,IAAMO,MAAM,GAAGhB,UAAU,CAAC6B,MAAM,CAAC;EAC7BZ,SAAS,EAAE;IACPa,IAAI,EAAE;EACV,CAAC;EACDV,eAAe,EAAE;IACbU,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE;EAChB,CAAC;EACDT,gBAAgB,EAAE;IACdQ,IAAI,EAAE,CAAC;IACPE,cAAc,EAAE;EAEpB,CAAC;EAAEX,KAAK,EAAE;IACNY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,GAAG;IACRC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,MAAM;IACbV,KAAK,EAAE;EACX,CAAC;EACDL,YAAY,EAAE;IACVgB,aAAa,EAAE,KAAK;IACpBP,cAAc,EAAE,eAAe;IAC/BP,eAAe,EAAE,kBAAkB;IACnCe,MAAM,EAAE,GAAG;IACXC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE;EACvB,CAAC;EACDlB,MAAM,EAAE;IACJM,IAAI,EAAE,CAAC;IACPU,MAAM,EAAE,EAAE;IACVG,gBAAgB,EAAE,EAAE;IACpBX,cAAc,EAAE,QAAQ;IACxBY,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACjB,CAAC;EACDrB,UAAU,EAAE;IACRC,KAAK,EAAE,OAAO;IACdK,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}